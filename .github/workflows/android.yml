name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - "v*"

jobs:
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Setup JDK
        uses: actions/setup-java@v2.5.1
        with:
          distribution: temurin
          java-version: "17"

      - name: Cache Gradle dependencies and plugins
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/caches/modules-2
            ~/.gradle/caches/*/plugin-resolution
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set execution flag for gradlew
        run: chmod +x gradlew

      - name: Set API keys as environment variables
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}

      - name: Build APK
        run: |
          ./gradlew assembleDebug \
            -PconsumerKey="${CONSUMER_KEY}" \
            -PconsumerSecret="${CONSUMER_SECRET}" \
            --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Release APK
    needs: apk
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: "1.0.0.2"
          release_name: ${{ github.event.repository.name }} 

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-debug.apk
          asset_name: ${{ github.event.repository.name }}.apk
          asset_content_type: application/zip
